spring.application.name=winestyle-parser-service
server.port=8080

management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

# kafka properties
default.kafka.bootstrap-server=localhost:29092
spring.kafka.bootstrap-server=${default.kafka.bootstrap-server}
spring.kafka.metrics.service-name=winestyle_parser_service
spring.kafka.consumer.group-id=wine.winestyle-parser-service

# flyway properties - https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#data-migration-properties
spring.flyway.baseline-on-migrate=true

# eureka properties
eureka.client.service-url.defaultZone=http://eureka-service:8080/eureka

# scheduler properties
spring.task.scheduling.pool.size=3
spring.task.scheduling.rate.parser.cron=0 0 0 * * *
spring.task.scheduling.rate.proxy.fixed.millis=7200000
spring.task.scheduling.rate.parser.delay=7200000
spring.task.scheduling.rate.auxiliary.fixed.millis=300000

# parser main properties
spring.jsoup.connection.timeout.millis=10000
spring.jsoup.scraping.interval.millis=5000
spring.jsoup.connection.user-agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) \
  AppleWebKit/537.36 (KHTML, like Gecko) \
  Chrome/85.0.4183.121 Safari/537.36

# winestyle urls
spring.jsoup.scraping.winestyle-main-msk-url=https://winestyle.ru
spring.jsoup.scraping.winestyle-main-spb-url=https://spb.winestyle.ru
spring.jsoup.scraping.winestyle-wine-part-url=/wine/all/
spring.jsoup.scraping.winestyle-sparkling-part-url=/champagnes-and-sparkling/champagnes/sparkling/sparkling-blue_ll/

# proxies main properties
spring.jsoup.scraping.proxy.different.check.enabled=true
spring.jsoup.scraping.proxy.http.check.enabled=true
spring.jsoup.scraping.proxy.socks.check.enabled=true

# proxies urls
spring.jsoup.scraping.proxy.different.source=https://raw.githubusercontent.com/clarketm/proxy-list/master/proxy-list-raw.txt;\
  https://api.proxyscrape.com/?request=getproxies&country=all;\
  https://raw.githubusercontent.com/ShiftyTR/Proxy-List/master/proxy.txt;\
  https://api.proxyscrape.com/v2/?request=getproxies&country=all&ssl=all&anonymity=all&simplified=true;
spring.jsoup.scraping.proxy.http.source=https://api.proxyscrape.com/v2/?request=getproxies&protocol=http&country=all&ssl=all&anonymity=all&simplified=true;
spring.jsoup.scraping.proxy.socks.source=https://api.proxyscrape.com/v2/?request=getproxies&protocol=socks5&country=all&simplified=true;\
  https://api.proxyscrape.com/v2/?request=getproxies&protocol=socks4&country=all&simplified=true

# parser css queries
spring.jsoup.parsing.css.query.name=.title
spring.jsoup.parsing.css.query.url=a
spring.jsoup.parsing.css.query.image-url=a.img-container
spring.jsoup.parsing.css.query.price=.price
spring.jsoup.parsing.css.query.winestyle-rating=.info-container meta[itemprop=ratingValue]
spring.jsoup.parsing.css.query.volume=label
spring.jsoup.parsing.css.query.manufacturer=span:contains(\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c:)
spring.jsoup.parsing.css.query.brand=span:contains(\u0411\u0440\u0435\u043d\u0434:)
spring.jsoup.parsing.css.query.country=span:contains(\u0420\u0435\u0433\u0438\u043e\u043d:)
spring.jsoup.parsing.css.query.strength=span:contains(\u041a\u0440\u0435\u043f\u043e\u0441\u0442\u044c:)
spring.jsoup.parsing.css.query.grape=span:contains(\u0421\u043e\u0440\u0442 \u0432\u0438\u043d\u043e\u0433\u0440\u0430\u0434\u0430:)
spring.jsoup.parsing.css.query.type=span:matches(([\u0412\u0432]\u0438\u043d\u043e)[:/].*)
spring.jsoup.parsing.css.query.taste=span:contains(\u0412\u043a\u0443\u0441)
spring.jsoup.parsing.css.query.aroma=span:contains(\u0410\u0440\u043e\u043c\u0430\u0442)
spring.jsoup.parsing.css.query.food-pairing=span:contains(\u0413\u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u044f)
spring.jsoup.parsing.css.query.description=.description-block
spring.jsoup.parsing.css.query.availability=[${spring.jsoup.parsing.css.attr.availability}]
spring.jsoup.parsing.css.attr.name=data-prodname
spring.jsoup.parsing.css.attr.image-url=href
spring.jsoup.parsing.css.attr.availability=data-avail
spring.jsoup.parsing.css.attr.winestyle-rating=content

# segmenting css queries
spring.jsoup.segmenting.css.query.main-page=.main-content
spring.jsoup.segmenting.css.query.product-page=.item-content
spring.jsoup.segmenting.css.query.info=.info-container
spring.jsoup.segmenting.css.query.list-description=.list-description
spring.jsoup.segmenting.css.query.description-block=.articles-container.desc
spring.jsoup.segmenting.css.query.left-block=.left-aside
spring.jsoup.segmenting.css.query.articles-block=.articles-col
spring.jsoup.segmenting.css.class.product=item-block

# other css queries
spring.jsoup.pagination.css.query.main-bottom=#CatalogPagingBottom li:last-of-type

# utilities properties
spring.data.csv.filename=data.csv

# exception message properties
spring.status-service.type.exception=Passed service type is unsupported