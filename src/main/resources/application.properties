spring.application.name=winestyle-parser-service

management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

# kafka properties
default.kafka.bootstrap-server=localhost:29092
spring.kafka.bootstrap-server=${default.kafka.bootstrap-server}
spring.kafka.metrics.service-name=winestyle_parser_service
spring.kafka.consumer.group-id=wine.winestyle-parser-service

# flyway properties - https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#data-migration-properties
spring.flyway.baseline-on-migrate=true

# scheduler's properties for activate (00:00:00 everyday)
spring.task.scheduling.cron-expression=0 0 0 * * *

# winestyle urls
spring.jsoup.scraping.winestyle-main-msk-url=https://winestyle.ru
spring.jsoup.scraping.winestyle-main-spb-url=https://spb.winestyle.ru
spring.jsoup.scraping.winestyle-wine-part-url=/wine/available_ll/
spring.jsoup.scraping.winestyle-sparkling-part-url=/champagnes-and-sparkling/champagnes/sparkling/sparkling-blue_ll/available_ll/

# parser queries
spring.jsoup.parsing.css.query.name=.title
spring.jsoup.parsing.css.query.url=a
spring.jsoup.parsing.css.query.image-url=a.img-container
spring.jsoup.parsing.css.query.price=.price
spring.jsoup.parsing.css.query.winestyle-rating=.info-container meta[itemprop=ratingValue]
spring.jsoup.parsing.css.query.volume=label
spring.jsoup.parsing.css.query.manufacturer=span:contains(Производитель:)
spring.jsoup.parsing.css.query.brand=span:contains(Бренд:)
spring.jsoup.parsing.css.query.country=span:contains(Регион:)
spring.jsoup.parsing.css.query.strength=span:contains(Крепость:)
spring.jsoup.parsing.css.query.grape=span:contains(Сорт винограда:)
spring.jsoup.parsing.css.query.type=span:matches(([Вв]ино)[:/].*)
spring.jsoup.parsing.css.query.taste=span:contains(Вкус)
spring.jsoup.parsing.css.query.aroma=span:contains(Аромат)
spring.jsoup.parsing.css.query.food-pairing=span:contains(Гастрономические сочетания)
spring.jsoup.parsing.css.query.description=.description-block
spring.jsoup.parsing.css.attr.name=data-prodname
spring.jsoup.parsing.css.attr.image-url=href
spring.jsoup.parsing.css.attr.winestyle-rating=content

# segmentor queries
spring.jsoup.segmenting.css.query.main-main=.main-content
spring.jsoup.segmenting.css.query.product-main=.main-content
spring.jsoup.segmenting.css.query.info=.info-container
spring.jsoup.segmenting.css.query.list-description=.list-description
spring.jsoup.segmenting.css.query.block-description=.articles-container.desc
spring.jsoup.segmenting.css.query.left-block=.left-aside
spring.jsoup.segmenting.css.query.articles-block=.articles-col
spring.jsoup.segmenting.css.class.product=item-block

# utilities properties
spring.data.csv.filename=data.csv